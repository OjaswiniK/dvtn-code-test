@model DVTN.Frontend.Web.Components.ViewComponents.PageHero.PageHeroViewModel

@{
    var bannerSizeCssClass = Model.IsFullSize ? "min-h-[max(490px,100svh)]" : "min-h-[max(490px,70svh)]";
}

<!--/// Component: HeroBanner ///-->
<div class="cc-hero-banner relative -mt-[var(--site-header-height)] flex flex-col justify-end bg-abergeldie-almost-black pt-[var(--site-header-height)] text-white @bannerSizeCssClass">

    @if (Model.HasHeroText)
    {
        <div class="copy relative z-50 pb-8 desktop-header:pb-16">
            <div class="container container-wide flex flex-col items-start gap-x-10 gap-y-1 sm:flex-row sm:items-end">
                <div class="max-w-prose flex-1">
                    <h1 class="text-pretty">@Model.HeroText</h1>
                </div>
            </div>
        </div>
    }

    <div class="background absolute inset-0 overflow-hidden bg-white">
        <div class="background-overlay absolute left-0 top-0 z-30 h-[260px] w-full bg-gradient-to-b from-black/90 to-transparent opacity-75"></div>
        <div class="background-overlay absolute inset-0 top-1/3 z-30 bg-gradient-to-t from-black to-transparent opacity-75"></div>

        <!--Image background-->
        <img src="/examples/hero-banner-low.jpg?width=10&auto=format" data-lowsrc="/examples/hero-banner-low.jpg?width=10&auto=format" data-src="/examples/hero-banner.jpg?width={width}&auto=format" data-sizes="auto" alt="" class="js-parallax lazyload h-full w-full object-cover" data-start="top 0" data-y="90%">

    </div>
</div>
<!--/// END Component: HeroBanner ///-->